{"version":3,"sources":["Components/Loader/Loader.js","Components/PageControls/PageControls.js","Components/Table/Table.js","Components/Icons/Icon.js","Components/SearchPanel/SearchPanel.js","Components/FilterPanel/FilterPanel.js","Components/DescriptionPanel/DescriptionPanel.js","services.js","Components/App/App.js","index.js"],"names":["Loader","className","PageControls","clientsNumber","getPage","useState","page","setPage","pages","Math","floor","useEffect","id","onClick","prevState","Array","map","i","e","target","Table","clientsToRender","getSortedField","getClientId","getSortIcon","onSortClick","a","b","slice","client","firstName","lastName","email","phone","state","currentTarget","onRowClick","renderTableBody","length","SearchIcon","width","height","viewBox","xmlns","d","SearchPanel","props","value","setValue","onSubmit","preventDefault","handleSubmit","type","placeholder","onChange","valueToSearch","toLowerCase","trim","FilterPanel","states","onSelectChange","handleOnChange","DescriptionPanel","selectedProfile","description","address","city","index","renderClient","APIservice","_formatTableData","adress","_formatDescriptionData","streetAddress","zip","fetch","response","ok","Error","json","this","getData","clients","App","setClients","sortConfig","setSortConfig","searchValue","setSearchValue","selectValue","setSelectValue","setStates","clientID","setClientId","setClient","api","getTableData","then","data","from","Set","filterClients","filtered","sortClients","sorted","searchClients","searched","getDescriptionData","find","sort","key","direction","filter","includes","elem","classList","remove","add","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f759bd25.chunk.js","sourcesContent":["import React from 'react'\nimport './Loader.css'\n\nexport default function Loader() {\n    return (\n        <div className='loader'></div>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport './PageControls.scss'\n\nexport default function PageControls({ clientsNumber, getPage }) {\n\n    const [page, setPage] = useState(0)\n    const pages = clientsNumber < 20 ? 1 : Math.floor(clientsNumber / 20)\n\n    useEffect(() => { getPage(page) }, [page])\n\n    const onClick = ({ target }) => {\n        setPage(+target.id)\n    }\n\n    const prevClick = () => {\n        setPage(prevState => prevState > 0 ? prevState - 1 : 0)\n    }\n\n    const nextClick = () => {\n        setPage(prevState => prevState < 5 ? prevState + 1 : 5)\n    }\n\n    return (\n        <div className='page-controls'>\n            <button className='btn' id='previous' onClick={() => prevClick()}> previous </button>\n            {[...Array(pages)].map((page, i) => <button className='btn' key={i} id={i} onClick={(e) => onClick(e)}> {i + 1} </button>)}\n            <button className='btn' id='next' onClick={() => nextClick()}> next </button>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport Loader from '../Loader/Loader'\nimport PageControls from '../PageControls/PageControls';\nimport './Table.scss'\n\nexport default function Table({ clientsToRender, getSortedField, getClientId, getSortIcon }) {\n\n    const [page, setPage] = useState(0)\n    const onSortClick = ({ target }) => {\n        getSortedField(target.id)\n        getSortIcon(target)\n    }\n\n    const onRowClick = ({ currentTarget }) => {\n        getClientId(+currentTarget.id)\n    }\n\n    const renderTableHead = () => {\n        return <tr>\n            <td> id\n                <span id='id' className='sort-icon' onClick={(e) => onSortClick(e)}></span>\n            </td>\n            <td>  First Name\n                <span id='firstName' className='sort-icon' onClick={(e) => onSortClick(e)}></span>\n            </td>\n            <td>  Last Name\n                <span id='lastName' className='sort-icon' onClick={(e) => onSortClick(e)}></span>\n            </td>\n            <td>  Email\n                <span id='email' className='sort-icon' onClick={(e) => onSortClick(e)}></span>\n            </td>\n            <td>  Phone\n                <span id='phone' className='sort-icon' onClick={(e) => onSortClick(e)}></span>\n            </td>\n            <td>  State\n                <span id='state' className='sort-icon' onClick={(e) => onSortClick(e)}></span>\n            </td>\n        </tr>\n    }\n\n    const renderTableBody = () => {\n        let a = page === 0 ? page : page * 20\n        let b = 20 * (page + 1)\n        return clientsToRender.slice(a, b).map((client, i) => {\n            const { id, firstName, lastName, email, phone, state } = client\n            return (\n                <tr id={id} key={i} onClick={(e) => onRowClick(e)}>\n                    <td>{id}</td>\n                    <td>{firstName}</td>\n                    <td>{lastName}</td>\n                    <td>{email}</td>\n                    <td>{phone}</td>\n                    <td>{state}</td>\n                </tr>\n            )\n        })\n    }\n\n    return (\n        <>\n            {clientsToRender ?\n                <>\n                    <table className='table'>\n                        <thead className='table-head' >\n                            {renderTableHead()}\n                        </thead >\n                        <tbody className='table-body'>\n                            {renderTableBody()}\n                        </tbody>\n                    </table >\n                    <PageControls\n                        clientsNumber={clientsToRender.length}\n                        getPage={setPage}\n                    />\n                </> :\n                <Loader />\n            }\n        </>\n    )\n}\n\n","const SearchIcon = () => {\n    return (\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M19.361 18.2168L14.601 13.2662C15.8249 11.8113 16.4954 9.98069 16.4954 8.07499C16.4954 3.62251 12.8729 0 8.42045 0C3.96797 0 0.345459 3.62251 0.345459 8.07499C0.345459 12.5275 3.96797 16.15 8.42045 16.15C10.092 16.15 11.6849 15.6458 13.0467 14.6888L17.8429 19.677C18.0434 19.8852 18.313 20 18.602 20C18.8755 20 19.1349 19.8957 19.3319 19.7061C19.7504 19.3034 19.7637 18.6357 19.361 18.2168ZM8.42045 2.10652C11.7115 2.10652 14.3889 4.78391 14.3889 8.07499C14.3889 11.3661 11.7115 14.0435 8.42045 14.0435C5.12937 14.0435 2.45198 11.3661 2.45198 8.07499C2.45198 4.78391 5.12937 2.10652 8.42045 2.10652Z\" />\n        </svg>\n    )\n}\n\nexport { SearchIcon }","import React, { useState } from 'react'\nimport './SearchPanel.scss'\nimport { SearchIcon } from '../Icons/Icon'\n\nexport default function SearchPanel(props) {\n\n    const [value, setValue] = useState('')\n\n    function onChange(e) {\n        e.preventDefault()\n        props.valueToSearch(e.target.value.toLowerCase().trim())\n        setValue(e.target.value)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n    }\n\n    return (\n        <form className='search-panel' onSubmit={(e) => handleSubmit(e)}>\n            <SearchIcon />\n            <input type='text' placeholder='Search by name' className='search-input' value={value} onChange={(e) => onChange(e)} />\n        </form>\n\n    )\n}","import React from 'react'\nimport './FilterPanel.scss'\n\nexport default function FilterPanel({ states, onSelectChange }) {\n\n    const handleOnChange = (e) => {\n        onSelectChange(e.target.value)\n    }\n\n    return (\n        <select onChange={(e) => handleOnChange(e)} className='filter-panel'>\n            {states.length !== 0 ?\n                states.map((state, i) => <option key={i} value={state}>{state}</option>) : null}\n        </select>\n    )\n}","import React from \"react\";\nimport './DescriptionPanel.scss'\n\nexport default function DescriptionPanel({ client }) {\n\n    const renderClient = () => {\n        const { selectedProfile, description, address, city, state, index } = client\n        return <div className='row'>\n            <div className='col'>\n                <ul>\n                    <li>Selected profile: </li>\n                    <li>Desctiption: </li>\n                    <li>Address: </li>\n                    <li>City: </li>\n                    <li>State: </li>\n                    <li>Index: </li>\n                </ul>\n            </div>\n            <div className='col'>\n                <ul>\n                    <li>{selectedProfile}</li>\n                    <li>{description}</li>\n                    <li>{address}</li>\n                    <li>{city}</li>\n                    <li>{state}</li>\n                    <li>{index}</li>\n                </ul>\n            </div>\n        </div>\n    }\n\n    return (\n        <div className='description-panel'>\n            <h3>Profile info:</h3>\n            {renderClient()}\n        </div>\n    )\n}","export default class APIservice {\n\n    async getData() {\n        let response = await fetch('https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json')\n        if (!response.ok) {\n            throw new Error('Could not fetch data')\n        }\n        return await response.json()\n    }\n\n    async getTableData() {\n        const clients = await this.getData()\n        return clients.map(this._formatTableData)\n    }\n\n    async getDescriptionData() {\n        const clients = await this.getData()\n        return clients.map(this._formatDescriptionData)\n    }\n\n    _formatTableData = client => {\n        return {\n            id: client.id,\n            firstName: client.firstName,\n            lastName: client.lastName,\n            email: client.email,\n            phone: client.phone,\n            state: client.adress.state\n        }\n    }\n\n    _formatDescriptionData = client => {\n        return {\n            id: client.id,\n            selectedProfile: `${client.firstName} ${client.lastName}`,\n            description: client.description,\n            address: client.adress.streetAddress,\n            city: client.adress.city,\n            state: client.adress.state,\n            index: client.adress.zip\n        }\n    }\n\n}\n\n\n\n","import './App.css';\nimport Table from '../Table/Table'\nimport SearchPanel from '../SearchPanel/SearchPanel';\nimport FilterPanel from '../FilterPanel/FilterPanel';\nimport DescriptionPanel from '../DescriptionPanel/DescriptionPanel';\nimport APIservice from '../../services'\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [clients, setClients] = useState(null)\n  const [sortConfig, setSortConfig] = useState({})\n  const [searchValue, setSearchValue] = useState('')\n  const [selectValue, setSelectValue] = useState('')\n  const [states, setStates] = useState([])\n  const [clientID, setClientId] = useState(null)\n  const [client, setClient] = useState(null)\n  const api = new APIservice()\n\n  useEffect(() => {\n    api.getTableData()\n      .then(data => {\n        setStates(Array.from(new Set(data.map(client => client.state))))\n        return data\n      })\n      .then(data => filterClients(data))\n      .then(filtered => sortClients(sortConfig, filtered))\n      .then(sorted => searchClients(sorted))\n      .then(searched => setClients(searched))\n\n    api.getDescriptionData()\n      .then(data =>\n        setClient(data.find(client => client.id === clientID)))\n  }, [sortConfig, searchValue, selectValue, clientID])\n\n  const sortClients = (sortConfig, clients) => {\n    let sorted = [...clients]\n    return sorted.sort((a, b) => {\n      if (a[sortConfig.key] < b[sortConfig.key]) {\n        return sortConfig.direction === 'asc' ? -1 : 1\n      }\n      if (a[sortConfig.key] > b[sortConfig.key]) {\n        return sortConfig.direction === 'asc' ? 1 : -1\n      }\n    })\n  }\n\n  const searchClients = (clients) => {\n    let searched = [...clients]\n    return searchValue !== '' ? searched.filter(client =>\n      client.firstName.toLowerCase().includes(searchValue) ||\n      client.lastName.toLowerCase().includes(searchValue)) : searched\n  }\n\n  const filterClients = (clients) => {\n    let filtered = [...clients]\n    return selectValue !== '' ? filtered.filter(client => client.state === selectValue) : filtered\n  }\n\n  const setSortIconStyle = (elem) => {\n    elem.classList.remove('sort-icon_asc')\n    elem.classList.add('sort-icon_desc')\n    if (sortConfig.key === elem.id && sortConfig.direction === 'asc') {\n      elem.classList.remove('sort-icon_desc')\n      elem.classList.add('sort-icon_asc')\n    }\n  }\n\n  const getSortConfig = (key) => {\n    let direction = 'asc'\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc'\n    }\n    setSortConfig({ key, direction })\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='search-controls'>\n        <SearchPanel valueToSearch={setSearchValue} />\n        <FilterPanel\n          states={states}\n          onSelectChange={(value) => setSelectValue(value)} />\n      </div>\n      <Table\n        clientsToRender={clients}\n        getSortIcon={setSortIconStyle}\n        getSortedField={getSortConfig}\n        getClientId={setClientId} />\n      {client ? <DescriptionPanel client={client} /> : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n\n"],"sourceRoot":""}